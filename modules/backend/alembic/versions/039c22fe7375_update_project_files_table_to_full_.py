"""Update project_files table to full schema

Revision ID: 039c22fe7375
Revises: bdee67ff8c4d
Create Date: 2025-08-15 10:26:27.819701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '039c22fe7375'
down_revision: Union[str, Sequence[str], None] = 'bdee67ff8c4d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project_files', sa.Column('created_by', sa.UUID(), nullable=True))
    op.add_column('project_files', sa.Column('updated_by', sa.UUID(), nullable=True))
    op.add_column('project_files', sa.Column('file_path', sa.String(length=1000), nullable=False))
    op.add_column('project_files', sa.Column('file_name', sa.String(length=255), nullable=False))
    op.add_column('project_files', sa.Column('file_extension', sa.String(length=50), nullable=True))
    op.add_column('project_files', sa.Column('file_type', sa.String(length=50), nullable=False))
    op.add_column('project_files', sa.Column('content', sa.Text(), nullable=True))
    op.add_column('project_files', sa.Column('content_hash', sa.String(length=64), nullable=True))
    op.add_column('project_files', sa.Column('file_size', sa.Integer(), nullable=False))
    op.add_column('project_files', sa.Column('is_binary', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('encoding', sa.String(length=50), nullable=False))
    op.add_column('project_files', sa.Column('version', sa.Integer(), nullable=False))
    op.add_column('project_files', sa.Column('is_latest', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('parent_version_id', sa.UUID(), nullable=True))
    op.add_column('project_files', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('is_ignored', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('is_generated', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('is_readonly', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('is_hidden', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('git_status', sa.String(length=50), nullable=True))
    op.add_column('project_files', sa.Column('git_hash', sa.String(length=40), nullable=True))
    op.add_column('project_files', sa.Column('branch_name', sa.String(length=255), nullable=True))
    op.add_column('project_files', sa.Column('ai_analyzed', sa.Boolean(), nullable=False))
    op.add_column('project_files', sa.Column('ai_analysis_result', postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.add_column('project_files', sa.Column('language_detected', sa.String(length=50), nullable=True))
    op.add_column('project_files', sa.Column('complexity_score', sa.Integer(), nullable=False))
    op.add_column('project_files', sa.Column('line_count', sa.Integer(), nullable=False))
    op.add_column('project_files', sa.Column('blank_line_count', sa.Integer(), nullable=False))
    op.add_column('project_files', sa.Column('comment_line_count', sa.Integer(), nullable=False))
    op.add_column('project_files', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'project_files', 'users', ['updated_by'], ['id'])
    op.create_foreign_key(None, 'project_files', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'project_files', 'project_files', ['parent_version_id'], ['id'])
    op.drop_column('project_files', 'size')
    op.drop_column('project_files', 'path')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project_files', sa.Column('path', sa.VARCHAR(length=1000), autoincrement=False, nullable=False))
    op.add_column('project_files', sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'project_files', type_='foreignkey')
    op.drop_constraint(None, 'project_files', type_='foreignkey')
    op.drop_constraint(None, 'project_files', type_='foreignkey')
    op.drop_column('project_files', 'updated_at')
    op.drop_column('project_files', 'comment_line_count')
    op.drop_column('project_files', 'blank_line_count')
    op.drop_column('project_files', 'line_count')
    op.drop_column('project_files', 'complexity_score')
    op.drop_column('project_files', 'language_detected')
    op.drop_column('project_files', 'ai_analysis_result')
    op.drop_column('project_files', 'ai_analyzed')
    op.drop_column('project_files', 'branch_name')
    op.drop_column('project_files', 'git_hash')
    op.drop_column('project_files', 'git_status')
    op.drop_column('project_files', 'is_hidden')
    op.drop_column('project_files', 'is_readonly')
    op.drop_column('project_files', 'is_generated')
    op.drop_column('project_files', 'is_ignored')
    op.drop_column('project_files', 'is_deleted')
    op.drop_column('project_files', 'parent_version_id')
    op.drop_column('project_files', 'is_latest')
    op.drop_column('project_files', 'version')
    op.drop_column('project_files', 'encoding')
    op.drop_column('project_files', 'is_binary')
    op.drop_column('project_files', 'file_size')
    op.drop_column('project_files', 'content_hash')
    op.drop_column('project_files', 'content')
    op.drop_column('project_files', 'file_type')
    op.drop_column('project_files', 'file_extension')
    op.drop_column('project_files', 'file_name')
    op.drop_column('project_files', 'file_path')
    op.drop_column('project_files', 'updated_by')
    op.drop_column('project_files', 'created_by')
    # ### end Alembic commands ###
