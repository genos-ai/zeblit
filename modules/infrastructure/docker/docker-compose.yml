version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-zeblit}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-zeblit123}
      POSTGRES_DB: ${POSTGRES_DB:-zeblit_dev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-zeblit}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-zeblit}:${POSTGRES_PASSWORD:-zeblit123}@postgres:5432/${POSTGRES_DB:-zeblit_dev}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    volumes:
      - ./src/backend:/app/src/backend
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        python -m alembic upgrade head &&
        python -m src.backend.seed_data &&
        python -m uvicorn src.backend.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production

  # Development Frontend (with hot reload)
  frontend-dev:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install -g bun && bun install && bun run dev --host"
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    profiles:
      - dev

  # Adminer (Database UI)
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    profiles:
      - dev

  # Redis Commander (Redis UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: zeblit_network 